# Generated by Django 5.1.2 on 2024-11-27 21:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_driver', models.BooleanField(default=False)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=15)),
                ('pickup_date', models.DateField(blank=True, null=True)),
                ('dropoff_date', models.DateField(blank=True, null=True)),
                ('pickup_time', models.TimeField(blank=True, null=True)),
                ('dropoff_time', models.TimeField(blank=True, null=True)),
                ('pickup_location', models.CharField(choices=[('lucena_grand_terminal_pick', 'Lucena Grand Terminal'), ('groto_lucban_quezon_pick', 'Groto Lucban Quezon'), ('tayabas_city_quezon_pick', 'Tayabas City Quezon')], max_length=255)),
                ('dropoff_location', models.CharField(choices=[('lucena_grand_terminal_drop', 'Lucena Grand Terminal'), ('groto_lucban_quezon_drop', 'Groto Lucban Quezon'), ('tayabas_city_quezon_drop', 'Tayabas City Quezon')], max_length=255)),
                ('vehicle', models.CharField(choices=[('Toyota Corolla', 'Class A - Toyota Corolla - 6 Seats'), ('Modernized PUV V1', 'Class B - Modernized PUV V1 - 15 Seats'), ('Modernized PUV V2', 'Class B - Modernized PUV V2 - 15 Seats')], max_length=100)),
                ('payment_method', models.CharField(choices=[('gcash', 'GCash'), ('cash', 'On-hand Payment (CASH)')], max_length=20)),
                ('total_fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('roundtrip', models.BooleanField(default=False)),
                ('gcash_receipt', models.ImageField(blank=True, null=True, upload_to='receipts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_when', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_driver', models.BooleanField(default=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
